from matplotlib import pyplot as plt
import numpy as np
import pandas as pd

data_frame_of_observed_and_averaged_predicted_docking_scores = pd.read_csv('Data_Frame_Of_Observed_And_Averaged_Predicted_Docking_Scores.csv')
tenth_percentile = np.percentile(data_frame_of_observed_and_averaged_predicted_docking_scores['observed_docking_score'], 10)
list_of_indicators_that_observation_belongs_to_lowest_10_percent = [1 if observed_docking_score < tenth_percentile else 0 for observed_docking_score in data_frame_of_observed_and_averaged_predicted_docking_scores['observed_docking_score']]
data_frame_of_observed_and_averaged_predicted_docking_scores_and_indicators_that_observed_docking_score_belongs_to_lowest_10_percent = data_frame_of_observed_and_averaged_predicted_docking_scores.copy()
data_frame_of_observed_and_averaged_predicted_docking_scores_and_indicators_that_observed_docking_score_belongs_to_lowest_10_percent['belongs_to_lowest_10_percent'] = list_of_indicators_that_observation_belongs_to_lowest_10_percent

plt.scatter(
    x = data_frame_of_observed_and_averaged_predicted_docking_scores_and_indicators_that_observed_docking_score_belongs_to_lowest_10_percent['observed_docking_score'],
    y = data_frame_of_observed_and_averaged_predicted_docking_scores_and_indicators_that_observed_docking_score_belongs_to_lowest_10_percent['averaged_predicted_docking_score'],
    alpha = 0.1
)
plt.show()